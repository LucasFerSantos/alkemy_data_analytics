2022-06-26 19:30:23,055:DEBUG:pickle loaded: C:\ProgramData\Anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\2and3\builtins.pyi
2022-06-26 19:30:23,158:DEBUG:pickle loaded: C:\ProgramData\Anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\3\sys.pyi
2022-06-26 19:32:05,685:DEBUG:Las carpetas se crearon correctamente
2022-06-26 19:33:02,936:DEBUG:no hay carpetas coincidentes
2022-06-26 19:33:51,350:ERROR:Ocurrio una excepcion name 'url_museos' is not defined
Traceback (most recent call last):
  File "C:\Users\Usuario\AppData\Local\Temp/ipykernel_9012/2282621634.py", line 2, in <module>
    r_museos = requests.get(url_museos)
NameError: name 'url_museos' is not defined
2022-06-26 19:36:20,066:DEBUG:diff parser start
2022-06-26 19:36:20,066:DEBUG:line_lengths old: 1; new: 1
2022-06-26 19:36:20,067:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 19:36:20,068:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 19:36:20,069:DEBUG:diff parser end
2022-06-26 19:36:42,972:DEBUG:diff parser start
2022-06-26 19:36:42,973:DEBUG:line_lengths old: 1; new: 1
2022-06-26 19:36:42,973:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 19:36:42,975:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 19:36:42,975:DEBUG:diff parser end
2022-06-26 19:36:59,616:DEBUG:diff parser start
2022-06-26 19:36:59,616:DEBUG:line_lengths old: 1; new: 1
2022-06-26 19:36:59,616:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 19:36:59,617:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 19:36:59,617:DEBUG:diff parser end
2022-06-26 19:43:02,220:DEBUG:Starting new HTTPS connection (1): datos.gob.ar:443
2022-06-26 19:43:04,102:DEBUG:https://datos.gob.ar:443 "GET /dataset/cultura-mapa-cultural-espacios-culturales/archivo/cultura_4207def0-2ff7-41d5-9095-d42ae8207a5d HTTP/1.1" 200 10416
2022-06-26 19:46:12,720:DEBUG:Starting new HTTPS connection (1): datos.cultura.gob.ar:443
2022-06-26 19:46:12,969:DEBUG:https://datos.cultura.gob.ar:443 "GET /dataset/37305de4-3cce-4d4b-9d9a-fec3ca61d09f/resource/4207def0-2ff7-41d5-9095-d42ae8207a5d/download/museos_datosabiertos.csv HTTP/1.1" 200 304431
2022-06-26 19:46:33,577:DEBUG:Las carpetas se crearon correctamente
2022-06-26 19:46:36,205:DEBUG:no hay carpetas coincidentes
2022-06-26 19:46:38,283:ERROR:Ocurrio una excepcion name 'url_museos' is not defined
Traceback (most recent call last):
  File "C:\Users\Usuario\AppData\Local\Temp/ipykernel_9012/2282621634.py", line 2, in <module>
    r_museos = requests.get(url_museos)
NameError: name 'url_museos' is not defined
2022-06-26 19:47:04,337:DEBUG:diff parser start
2022-06-26 19:47:04,338:DEBUG:line_lengths old: 1; new: 1
2022-06-26 19:47:04,338:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 19:47:04,338:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 19:47:04,338:DEBUG:diff parser end
2022-06-26 19:53:19,782:DEBUG:diff parser start
2022-06-26 19:53:19,782:DEBUG:line_lengths old: 1; new: 1
2022-06-26 19:53:19,782:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 19:53:19,783:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 19:53:19,783:DEBUG:diff parser end
2022-06-26 20:11:05,468:DEBUG:diff parser start
2022-06-26 20:11:05,469:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:11:05,469:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:11:05,469:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:11:05,470:DEBUG:diff parser end
2022-06-26 20:11:08,255:DEBUG:diff parser start
2022-06-26 20:11:08,256:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:11:08,256:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:11:08,256:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:11:08,256:DEBUG:diff parser end
2022-06-26 20:12:00,124:DEBUG:diff parser start
2022-06-26 20:12:00,124:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:12:00,124:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:12:00,125:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:12:00,125:DEBUG:diff parser end
2022-06-26 20:12:02,736:DEBUG:diff parser start
2022-06-26 20:12:02,736:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:12:02,736:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:12:02,738:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:12:02,738:DEBUG:diff parser end
2022-06-26 20:17:25,027:DEBUG:diff parser start
2022-06-26 20:17:25,027:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:17:25,028:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:17:25,028:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:17:25,028:DEBUG:diff parser end
2022-06-26 20:20:56,532:DEBUG:Starting new HTTPS connection (1): datos.cultura.gob.ar:443
2022-06-26 20:20:56,742:DEBUG:https://datos.cultura.gob.ar:443 "GET /dataset/37305de4-3cce-4d4b-9d9a-fec3ca61d09f/resource/392ce1a8-ef11-4776-b280-6f1c7fae16ae/download/cine.csv HTTP/1.1" 200 96427
2022-06-26 20:27:53,099:DEBUG:diff parser start
2022-06-26 20:27:53,099:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:27:53,099:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:27:53,100:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:27:53,100:DEBUG:diff parser end
2022-06-26 20:30:12,391:DEBUG:diff parser start
2022-06-26 20:30:12,391:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:30:12,391:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:30:12,392:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:30:12,392:DEBUG:diff parser end
2022-06-26 20:50:39,897:DEBUG:Starting new HTTPS connection (1): datos.cultura.gob.ar:443
2022-06-26 20:50:40,137:DEBUG:https://datos.cultura.gob.ar:443 "GET /dataset/37305de4-3cce-4d4b-9d9a-fec3ca61d09f/resource/01c6c048-dbeb-44e0-8efa-6944f73715d7/download/biblioteca_popular.csv HTTP/1.1" 200 None
2022-06-26 20:51:15,297:DEBUG:diff parser start
2022-06-26 20:51:15,297:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:51:15,297:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:51:15,298:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:51:15,298:DEBUG:diff parser end
2022-06-26 20:51:19,274:DEBUG:diff parser start
2022-06-26 20:51:19,274:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:51:19,275:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:51:19,275:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:51:19,275:DEBUG:diff parser end
2022-06-26 20:52:36,572:DEBUG:diff parser start
2022-06-26 20:52:36,572:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:52:36,572:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:52:36,573:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:52:36,573:DEBUG:diff parser end
2022-06-26 20:57:15,071:DEBUG:diff parser start
2022-06-26 20:57:15,071:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:57:15,071:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:57:15,072:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:57:15,072:DEBUG:diff parser end
2022-06-26 20:57:19,429:DEBUG:diff parser start
2022-06-26 20:57:19,429:DEBUG:line_lengths old: 1; new: 1
2022-06-26 20:57:19,429:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 20:57:19,430:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 20:57:19,430:DEBUG:diff parser end
2022-06-26 21:07:54,188:DEBUG:matplotlib data path: C:\ProgramData\Anaconda3\lib\site-packages\matplotlib\mpl-data
2022-06-26 21:07:54,363:DEBUG:CONFIGDIR=C:\Users\Usuario\.matplotlib
2022-06-26 21:07:54,367:DEBUG:matplotlib version 3.4.3
2022-06-26 21:07:54,367:DEBUG:interactive is False
2022-06-26 21:07:54,367:DEBUG:platform is win32
2022-06-26 21:07:54,367:DEBUG:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', 'posixpath', 'fnmatch', 'glob', '_socket', 'math', 'select', 'selectors', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'getpass', 'platform', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'zipfile', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'encodings.cp437', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32security', 'ntsecuritycon', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'brotli.brotli', 'brotli', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'requests.exceptions', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.assets', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.hebrewprober', 'chardet.sbcharsetprober', 'chardet.langbulgarianmodel', 'chardet.langgreekmodel', 'chardet.langhebrewmodel', 'chardet.langrussianmodel', 'chardet.langthaimodel', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'requests.__version__', 'importlib._common', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', '_csv', 'csv', 'configparser', 'importlib.metadata', 'sqlalchemy.util.compat', 'sqlalchemy.cimmutabledict', 'sqlalchemy.util._collections', 'sqlalchemy.util._preloaded', 'greenlet._greenlet', 'greenlet', 'sqlalchemy.exc', 'sqlalchemy.util.langhelpers', 'sqlalchemy.util._concurrency_py3k', 'sqlalchemy.util.concurrency', 'sqlalchemy.util.deprecations', 'sqlalchemy.util', 'sqlalchemy.sql.roles', 'sqlalchemy.sql.visitors', 'sqlalchemy.sql.operators', 'sqlalchemy.inspection', 'sqlalchemy.sql.traversals', 'sqlalchemy.sql.base', 'sqlalchemy.sql.coercions', 'sqlalchemy.sql.type_api', 'sqlalchemy.sql.annotation', 'sqlalchemy.sql.elements', 'sqlalchemy.event.legacy', 'sqlalchemy.event.registry', 'sqlalchemy.event.attr', 'sqlalchemy.event.base', 'sqlalchemy.event.api', 'sqlalchemy.event', 'sqlalchemy.cprocessors', 'sqlalchemy.processors', 'sqlalchemy.sql.sqltypes', 'sqlalchemy.types', 'sqlalchemy.util.topological', 'sqlalchemy.sql.ddl', 'sqlalchemy.sql.selectable', 'sqlalchemy.sql.schema', 'sqlalchemy.sql.util', 'sqlalchemy.sql.dml', 'sqlalchemy.sql.crud', 'sqlalchemy.sql.functions', 'sqlalchemy.sql.compiler', 'sqlalchemy.sql.lambdas', 'sqlalchemy.sql.expression', 'sqlalchemy.sql.events', 'sqlalchemy.sql.default_comparator', 'sqlalchemy.sql.naming', 'sqlalchemy.sql', 'sqlalchemy.engine.interfaces', 'sqlalchemy.engine.util', 'sqlalchemy.log', 'sqlalchemy.engine.base', 'sqlalchemy.engine.events', 'sqlalchemy.dialects', 'sqlalchemy.engine.url', 'sqlalchemy.engine.mock', 'sqlalchemy.pool.base', 'sqlalchemy.pool.events', 'sqlalchemy.util.queue', 'sqlalchemy.pool.impl', 'sqlalchemy.pool.dbapi_proxy', 'sqlalchemy.pool', 'sqlalchemy.engine.create', 'sqlalchemy.cresultproxy', 'sqlalchemy.engine.row', 'sqlalchemy.engine.result', 'sqlalchemy.engine.cursor', 'sqlalchemy.engine.reflection', 'sqlalchemy.engine', 'sqlalchemy.schema', 'sqlalchemy.events', 'sqlalchemy.engine.characteristics', 'sqlalchemy.engine.default', 'sqlalchemy', 'sqlalchemy.orm.exc', 'sqlalchemy.orm.base', 'sqlalchemy.orm.collections', 'sqlalchemy.orm.path_registry', 'sqlalchemy.orm.interfaces', 'sqlalchemy.orm.attributes', 'sqlalchemy.orm.state', 'sqlalchemy.orm.instrumentation', 'sqlalchemy.orm.util', 'sqlalchemy.orm.strategy_options', 'sqlalchemy.future.engine', 'sqlalchemy.future', 'sqlalchemy.orm.loading', 'sqlalchemy.orm.descriptor_props', 'sqlalchemy.orm.relationships', 'sqlalchemy.orm.properties', 'sqlalchemy.orm.mapper', 'sqlalchemy.orm.context', 'sqlalchemy.orm.clsregistry', 'sqlalchemy.orm.decl_base', 'sqlalchemy.orm.decl_api', 'sqlalchemy.orm.identity', 'sqlalchemy.orm.query', 'sqlalchemy.orm.evaluator', 'sqlalchemy.orm.sync', 'sqlalchemy.orm.persistence', 'sqlalchemy.orm.unitofwork', 'sqlalchemy.orm.session', 'sqlalchemy.orm.scoping', 'sqlalchemy.orm.events', 'sqlalchemy.orm.strategies', 'sqlalchemy.orm.dynamic', 'sqlalchemy.orm.dependency', 'sqlalchemy.ext.baked', 'sqlalchemy.ext', 'sqlalchemy.orm', 'sqlalchemy.ext.declarative.extensions', 'sqlalchemy.ext.declarative', 'decouple.event', 'decouple.registry', 'decouple.mediator', 'decouple.publisher', 'decouple.module', 'decouple', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'mkl._mklinit', 'mkl._py_mkl_service', 'mkl', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'numexpr.__config__', 'numexpr.interpreter', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'jedi.inference.finder', 'netrc', 'pandas.io.formats.string', 'pandas.io.formats.html', 'jedi.inference.star_args', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'defusedxml.common', 'defusedxml', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver', 'dateutil.rrule', 'matplotlib.units', 'matplotlib.dates']
2022-06-26 21:07:54,618:DEBUG:CACHEDIR=C:\Users\Usuario\.matplotlib
2022-06-26 21:07:54,645:DEBUG:Using fontManager instance from C:\Users\Usuario\.matplotlib\fontlist-v330.json
2022-06-26 21:07:56,401:DEBUG:Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-06-26 21:07:56,402:DEBUG:Loaded backend module://matplotlib_inline.backend_inline version unknown.
2022-06-26 21:09:02,565:DEBUG:diff parser start
2022-06-26 21:09:02,565:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:09:02,565:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:09:02,566:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:09:02,566:DEBUG:diff parser end
2022-06-26 21:09:30,773:DEBUG:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-06-26 21:09:30,773:DEBUG:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,773:DEBUG:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,774:DEBUG:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,775:DEBUG:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,776:DEBUG:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-06-26 21:09:30,777:DEBUG:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,777:DEBUG:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-06-26 21:09:30,777:DEBUG:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,777:DEBUG:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-06-26 21:09:30,777:DEBUG:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'Induction' (inductio.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,778:DEBUG:findfont: score(<Font 'Greek Diner Inline TT' (Greek_i.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'Digifit' (digifit.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'LittleLordFontleroy' (littlelo.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'Parry Hotter' (parryhotter.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'AngsanaUPC' (angsaub.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'PhrasticMedium' (Phrasme_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'BrowalliaUPC' (browaub.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,779:DEBUG:findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'CordiaUPC' (cordiau.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Urdu Typesetting' (UrdType.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Skinny' (Skinny__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,780:DEBUG:findfont: score(<Font 'Mycalc' (Mycalc__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,781:DEBUG:findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,781:DEBUG:findfont: score(<Font 'Minerva' (Minerva_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,781:DEBUG:findfont: score(<Font 'Glockenspiel' (Glock___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,781:DEBUG:findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,781:DEBUG:findfont: score(<Font 'AngsanaUPC' (angsaui.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,781:DEBUG:findfont: score(<Font 'Waverly' (Waverly_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'FreesiaUPC' (upcfi.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'Sakkal Majalla' (majallab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,782:DEBUG:findfont: score(<Font 'Russel Write TT' (Russrite.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'FreesiaUPC' (upcfbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Chancery Cursive' (chancur.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Bobcat' (bobcat.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,783:DEBUG:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'Corporate' (Corpo___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'Mael' (mael____.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'MelodBold' (Melodbo_.ttf) normal normal 7 normal>) = 10.42335
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'Pirate' (Pirate__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,784:DEBUG:findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,785:DEBUG:findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,785:DEBUG:findfont: score(<Font 'PenultimateLight' (PENULLI_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,785:DEBUG:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'Enliven' (Enliven_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'DK Darker Marker' (DK Darker Marker.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,786:DEBUG:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'AngsanaUPC' (angsau.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'BrowalliaUPC' (browauz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,787:DEBUG:findfont: score(<Font 'Shruti' (shruti.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,788:DEBUG:findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,788:DEBUG:findfont: score(<Font 'Stephen' (Stephen_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,788:DEBUG:findfont: score(<Font 'Flubber' (flubber.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,788:DEBUG:findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,788:DEBUG:findfont: score(<Font 'IrisUPC' (upcib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Estrangelo Edessa' (estre.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Simplified Arabic' (simpbdo.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Mangal' (mangalb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,789:DEBUG:findfont: score(<Font 'Arabic Typesetting' (arabtype.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Kalinga' (kalinga.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Hollywood Hills' (hollh___.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Candles' (candles_.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,790:DEBUG:findfont: score(<Font 'LilyUPC' (upclb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'CordiaUPC' (cordiaui.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'EucrosiaUPC' (upcel.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Aharoni' (ahronbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'FreesiaUPC' (upcfl.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Autumn' (Autumn__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,791:DEBUG:findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'CordiaUPC' (cordiauz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Yu Gothic' (yugothic.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,792:DEBUG:findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'Browallia New' (browaz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'Khmer UI' (KhmerUIb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,793:DEBUG:findfont: score(<Font 'OpineHeavy' (Opinehe_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Kokila' (kokila.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Urdu Typesetting' (UrdTypeb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,794:DEBUG:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'BOUTON International Symbols' (BOUTON_International_symbols.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Batang' (batang.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,795:DEBUG:findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Trajan Pro' (TrajanPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Vijaya' (vijayab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Euphemia' (euphemia.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'Shonar Bangla' (Shonar.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,796:DEBUG:findfont: score(<Font 'DilleniaUPC' (upcdbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'Ovation' (Ovation.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'OilBats' (OilBats.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'Terminator Two' (terminat.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'DokChampa' (dokchamp.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,797:DEBUG:findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'MoolBoran' (moolbor.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'JasmineUPC' (upcjl.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'Cooper Std' (CooperBlackStd-Italic.otf) italic normal 900 normal>) = 11.525
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'Baby Kruffy' (babyk___.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,798:DEBUG:findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Aparajita' (aparaji.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Cordia New' (cordiab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,799:DEBUG:findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Leelawadee' (leelawdb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font '18thCentury' (18cents.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,800:DEBUG:findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'JasmineUPC' (upcjbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'Mesquite Std' (MesquiteStd.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'Simplified Arabic' (simpo.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,801:DEBUG:findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'JasmineUPC' (upcji.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'Brushaff' (Brushaff.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,802:DEBUG:findfont: score(<Font 'Latha' (latha.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'DilleniaUPC' (upcdl.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'Clarendon' (CLARE___.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'BM YEONSUNG' (BMYEONSUNG_ttf.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,803:DEBUG:findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Aparajita' (aparajb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Frankfurter Venetian TT' (Frnkvent.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2022-06-26 21:09:30,804:DEBUG:findfont: score(<Font 'Gisha' (gishabd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Italianate' (Itali___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'MT Extra' (mtextra.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Browallia New' (browai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,805:DEBUG:findfont: score(<Font 'Utsaah' (utsaah.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Cordia New' (cordia.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Shonar Bangla' (Shonarb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'KoreanTimesSSK' (KORETS_.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,806:DEBUG:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'UnShinmun' (UnShinmun.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,807:DEBUG:findfont: score(<Font 'Rondalo' (RONDALO_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Notram' (Notram__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,808:DEBUG:findfont: score(<Font 'Aparajita' (aparaj.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'FrankRuehl' (frank.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'AngsanaUPC' (angsauz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'LetterOMatic!' (ltromatic.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,809:DEBUG:findfont: score(<Font 'Miriam Fixed' (mriamc.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Rod' (rod.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Deneane' (Deneane_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,810:DEBUG:findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Vrinda' (vrindab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Yu Gothic' (yugothil.ttf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'EucrosiaUPC' (upceb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,811:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'X-Files' (xfiles.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'LilyUPC' (upclbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,812:DEBUG:findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'Brandish' (Brand___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-06-26 21:09:30,813:DEBUG:findfont: score(<Font 'Alien Encounters' (aliee13.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,814:DEBUG:findfont: score(<Font 'BolsterBold' (Bolstbo_.ttf) normal normal 7 normal>) = 10.42335
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Vani' (Vanib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Yu Mincho' (yumin.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,815:DEBUG:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'Latha' (lathab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'November' (Novem___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'Microsoft Uighur' (msuighur.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'CordiaUPC' (cordiaub.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,816:DEBUG:findfont: score(<Font 'Haxton Logos TT' (Haxton.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Yu Mincho' (yuminl.ttf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Kokila' (kokilabi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'MingLiU' (mingliu.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Traditional Arabic' (tradbdo.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,817:DEBUG:findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Mangal' (mangal.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Utsaah' (utsaahbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,818:DEBUG:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Alfredo' (Alfredo_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Miriam' (mriam.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,819:DEBUG:findfont: score(<Font 'Khmer UI' (KhmerUI.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'BN Machine' (bnmachine.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Dominican' (DOMIN___.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Harvest' (HARVEST_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Tunga' (tungab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Balthazar' (BALTH___.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,820:DEBUG:findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Tarzan' (Tarzan__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Detente' (Detente_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,821:DEBUG:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Lao UI' (LaoUI.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Good Times' (goodtime.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Tunga' (tunga.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,822:DEBUG:findfont: score(<Font 'Browallia New' (browab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'LilyUPC' (upcll.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'Kokila' (kokilai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'Iskoola Pota' (iskpota.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'Angsana New' (angsab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'Nueva Std' (NuevaStd-CondItalic.otf) italic normal 400 condensed>) = 11.25
2022-06-26 21:09:30,823:DEBUG:findfont: score(<Font 'Ethnocentric' (ethnocen.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'RowdyHeavy' (Rowdyhe_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2022-06-26 21:09:30,824:DEBUG:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Asimov' (asimov.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Martina' (Martina_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Shruti' (shrutib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Emmett' (Emmett__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,825:DEBUG:findfont: score(<Font 'Leelawadee' (leelawad.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,826:DEBUG:findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'QuiverItal' (QUIVEIT_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2022-06-26 21:09:30,827:DEBUG:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'SF Movie Poster' (sf movie poster2.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'Toledo' (Toledo__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'Guitar Pro 5' (Guitar Pro 5.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'Raavi' (raavib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,828:DEBUG:findfont: score(<Font 'KodchiangUPC' (upckb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Rosewood Std' (RosewoodStd-Regular.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Aldhabi' (aldhabi.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Stencil Std' (StencilStd.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Manorly' (Manorly_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,829:DEBUG:findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'Brussels' (Bruss___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'EucrosiaUPC' (upcebi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'Neon Lights' (neon2.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,830:DEBUG:findfont: score(<Font 'Coolsville' (Cools___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Kartika' (kartika.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Austie Bost Envelopes' (Austie Bost Envelopes.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Fingerpop' (fingerpop2.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Yu Mincho' (yumindb.ttf) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,831:DEBUG:findfont: score(<Font 'Kalinga' (kalingab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,832:DEBUG:findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Colbert' (Colbert_.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,833:DEBUG:findfont: score(<Font 'Huxley Titling' (Huxley_Titling.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Orator Std' (OratorStd-Slanted.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Valken' (VALKEN__.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Vijaya' (vijaya.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Angsana New' (angsa.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'BrowalliaUPC' (browaui.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,834:DEBUG:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Gazzarelli' (gazzarelli.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'BN Jinx' (bnjinx.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,835:DEBUG:findfont: score(<Font 'Splash' (SPLASH__.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Gulim' (gulim.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Morris Roman' (MorrisRoman-Black.ttf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Hombre' (Hombre__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Lao UI' (LaoUIb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Morris Roman Alternate' (MorrisRomanAlternate-Black.ttf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,836:DEBUG:findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'Kartika' (kartikab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'peach sundress ~' (peach-sundress.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,837:DEBUG:findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'AcmeFont' (Acme____.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'JasmineUPC' (upcjb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'Giddyup Std' (GiddyupStd.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'Levenim MT' (lvnmbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,838:DEBUG:findfont: score(<Font 'Year supply of fairy cakes' (yearsupplyoffairycakes.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Garineldo' (Garineldo.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Bastion' (BASTION_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,839:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'Almonte Snow' (almosnow.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'Vrinda' (vrinda.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'Always In My Heart' (Always In My Heart.ttf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'LilyUPC' (upcli.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,840:DEBUG:findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,841:DEBUG:findfont: score(<Font 'Gautami' (gautamib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Snowdrift' (snowdrft.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,842:DEBUG:findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Limousine' (Limou___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,843:DEBUG:findfont: score(<Font 'Salina' (Salina__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'IrisUPC' (upcil.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,844:DEBUG:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Great Vibes' (GreatVibes-Regular.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Woodcut' (woodcut.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Arial Unicode MS' (ARIALUNI.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,845:DEBUG:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font 'Cordia New' (cordiaz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font '3 of 9 Barcode' (3OF9.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,846:DEBUG:findfont: score(<Font 'Plantagenet Cherokee' (plantc.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Heavy Heap' (heavyhea2.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Gautami' (gautami.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Nyala' (nyala.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'PR Celtic Narrow' (narrow.ttf) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,847:DEBUG:findfont: score(<Font 'Hansen' (Hansen__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'KodchiangUPC' (upckl.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Commons' (COMMONS_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Traditional Arabic' (trado.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,848:DEBUG:findfont: score(<Font 'Narkisim' (nrkis.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,849:DEBUG:findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'Browallia New' (browa.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'Creepygirl' (creerg__.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'Steppes TT' (Steppes.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,850:DEBUG:findfont: score(<Font 'HarvestItal' (HARVEIT_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'IrisUPC' (upcii.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'Whimsy TT' (Whimsy.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'IrisUPC' (upcibi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,851:DEBUG:findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,852:DEBUG:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,852:DEBUG:findfont: score(<Font 'FreesiaUPC' (upcfb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,852:DEBUG:findfont: score(<Font 'Gisha' (gisha.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,852:DEBUG:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,852:DEBUG:findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,852:DEBUG:findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Nasalization' (nasaliza.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Sakkal Majalla' (majalla.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,853:DEBUG:findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'DK Nouveau Crayon' (DK Nouveau Crayon.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,854:DEBUG:findfont: score(<Font 'PenultimateLightItal' (PENLIIT_.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'Diamond Dust' (Diamond Dust - PERSONAL USE ONLY.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'David' (davidbd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,855:DEBUG:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Simplified Arabic Fixed' (simpfxo.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Calligraphic' (CALLI___.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Amethyst' (Ameth___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,856:DEBUG:findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'BrowalliaUPC' (browau.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'Utsaah' (utsaahi.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,857:DEBUG:findfont: score(<Font 'Raavi' (raavi.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Borealis' (Borea___.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'KodchiangUPC' (upcki.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Distant Galaxy' (distant galaxy 2.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,858:DEBUG:findfont: score(<Font 'Utsaah' (utsaahb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'DilleniaUPC' (upcdb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'Yu Gothic' (yugothib.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCondItalic.otf) italic normal 700 condensed>) = 11.535
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'Roland' (Roland__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,859:DEBUG:findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Angsana New' (angsaz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Andalus' (andlso.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'David' (david.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,860:DEBUG:findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'Geotype TT' (Geotype.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'KodchiangUPC' (upckbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'Cracked Johnnie' (cracj___.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,861:DEBUG:findfont: score(<Font 'Iskoola Pota' (iskpotab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Levenim MT' (lvnm.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Angsana New' (angsai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,862:DEBUG:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'Cordia New' (cordiai.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'Hand Me Down S (BRK)' (handmeds.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'DFKai-SB' (kaiu.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'Cooper Std' (CooperBlackStd.otf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,863:DEBUG:findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,864:DEBUG:findfont: score(<Font 'Vivian' (Vivian__.ttf) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'Aparajita' (aparajbi.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'DaunPenh' (daunpenh.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-06-26 21:09:30,865:DEBUG:findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'EucrosiaUPC' (upcei.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Moonbeam' (MOONB___.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Bar Code25 InterleaveTall' (Bar25it.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-06-26 21:09:30,866:DEBUG:findfont: score(<Font 'DilleniaUPC' (upcdi.ttf) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Microsoft Uighur' (msuighub.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Kokila' (kokilab.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Vani' (Vani.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-06-26 21:09:30,867:DEBUG:findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Chinyen' (chinyen.ttf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Zamoretta' (Zamoretta.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Calvin' (CALVIN__.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,868:DEBUG:findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
2022-06-26 21:09:30,869:DEBUG:findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,870:DEBUG:findfont: score(<Font 'Dayton' (DAYTON__.TTF) normal normal 5 normal>) = 10.42525
2022-06-26 21:09:30,870:DEBUG:findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
2022-06-26 21:09:30,870:DEBUG:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,870:DEBUG:findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2022-06-26 21:09:30,870:DEBUG:findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2022-06-26 21:09:30,870:DEBUG:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\ProgramData\\Anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-06-26 21:12:00,577:DEBUG:diff parser start
2022-06-26 21:12:00,577:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:12:00,577:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:12:00,577:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:12:00,577:DEBUG:diff parser end
2022-06-26 21:14:34,503:DEBUG:diff parser start
2022-06-26 21:14:34,503:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:14:34,503:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:14:34,504:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:14:34,504:DEBUG:diff parser end
2022-06-26 21:14:39,504:DEBUG:diff parser start
2022-06-26 21:14:39,504:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:14:39,505:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:14:39,506:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:14:39,506:DEBUG:diff parser end
2022-06-26 21:14:44,529:DEBUG:diff parser start
2022-06-26 21:14:44,529:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:14:44,529:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:14:44,530:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:14:44,530:DEBUG:diff parser end
2022-06-26 21:14:51,891:DEBUG:diff parser start
2022-06-26 21:14:51,891:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:14:51,891:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:14:51,892:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:14:51,892:DEBUG:diff parser end
2022-06-26 21:15:02,731:DEBUG:diff parser start
2022-06-26 21:15:02,731:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:15:02,731:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:15:02,732:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:15:02,733:DEBUG:diff parser end
2022-06-26 21:16:33,526:DEBUG:diff parser start
2022-06-26 21:16:33,527:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:16:33,527:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:16:33,528:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:16:33,528:DEBUG:diff parser end
2022-06-26 21:16:43,175:DEBUG:diff parser start
2022-06-26 21:16:43,175:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:16:43,175:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:16:43,176:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:16:43,176:DEBUG:diff parser end
2022-06-26 21:16:54,752:DEBUG:diff parser start
2022-06-26 21:16:54,753:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:16:54,753:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:16:54,753:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:16:54,753:DEBUG:diff parser end
2022-06-26 21:16:58,041:DEBUG:diff parser start
2022-06-26 21:16:58,042:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:16:58,042:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:16:58,043:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:16:58,043:DEBUG:diff parser end
2022-06-26 21:17:01,066:DEBUG:diff parser start
2022-06-26 21:17:01,066:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:17:01,066:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:17:01,067:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:17:01,067:DEBUG:diff parser end
2022-06-26 21:17:05,193:DEBUG:diff parser start
2022-06-26 21:17:05,193:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:17:05,193:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:17:05,194:DEBUG:parse_part from 1 to 2 (to 0 in part parser)
2022-06-26 21:17:05,194:DEBUG:diff parser end
2022-06-26 21:17:27,737:DEBUG:diff parser start
2022-06-26 21:17:27,737:DEBUG:line_lengths old: 1; new: 1
2022-06-26 21:17:27,737:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 21:17:27,738:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 21:17:27,739:DEBUG:diff parser end
2022-06-26 22:37:17,319:DEBUG:diff parser start
2022-06-26 22:37:17,320:DEBUG:line_lengths old: 1; new: 1
2022-06-26 22:37:17,320:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 22:37:17,320:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 22:37:17,320:DEBUG:diff parser end
2022-06-26 22:41:13,523:DEBUG:diff parser start
2022-06-26 22:41:13,523:DEBUG:line_lengths old: 1; new: 1
2022-06-26 22:41:13,523:DEBUG:-> code[replace] old[1:1] new[1:1]
2022-06-26 22:41:13,524:DEBUG:parse_part from 1 to 1 (to 0 in part parser)
2022-06-26 22:41:13,524:DEBUG:diff parser end
